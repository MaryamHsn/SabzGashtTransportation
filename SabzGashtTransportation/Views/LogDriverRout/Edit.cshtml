@using Sabz.DomainClasses.DTO
@using Sabz.ServiceLayer.Enumration
@using Sabz.ServiceLayer.Extension
@using Sabz.ServiceLayer.Utils
@model SabzGashtTransportation.ViewModel.LogDriverRoutViewModel

@{
    ViewBag.Title = "ویرایش مسیرهای روزانه";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    @Styles.Render("~/css/css/style.css");
    var insurancTextShowDefault = "";
    var RoutShiftTypeString = "";
}


<h2 class="style-h2"> ویرایش مسیرهای روزانه </h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.DoDate)
        @Html.HiddenFor(model => model.DriverRoutId)

        <div class="form-group">
            <p class="control-label"> شرکت مسیر:</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoutRegionName, new { htmlAttributes = new { @class = "form-control" , @disabled = "disabled"} })

            </div>
        </div>
        <div class="form-group">
            <p class="control-label"> راننده:</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DriverFullName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

            </div>
        </div> 
        @*<div class="form-group">
            <p class="control-label"> مسیر ورودی/خروجی:</p>
            <div class="col-md-10">
                @{
                    if (Model.RoutShiftType == (int)ShiftTypeEnum.Enter)
                    {
                        RoutShiftTypeString = ShiftTypeEnum.Enter.GetDisplayName();
                    }
                    else
                    {
                        RoutShiftTypeString = ShiftTypeEnum.Exit.GetDisplayName();
                    }
                }
                @Html.Editor(RoutShiftTypeString, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

            </div>
        </div>*@
        <div class="form-group">
            <p class="control-label"> ساعت مسیر:</p>
            <div class="col-md-10">
                @*@Html.DisplayFor(modelItem => modelItem.RoutEnterTimeString)*@
                @Html.EditorFor(model => model.RoutEnterTimeString, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

            </div>
        </div>
        <div class="form-group">
            <p class="control-label"> تاریخ مسیر:</p>
            <div class="col-md-10">
                @*@Html.DisplayFor(modelItem => modelItem.RoutStartDateString)*@
                @Html.EditorFor(model => model.RoutStartDateString, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })


            </div>
        </div>
        <div class="form-group">
            <p class="control-label"> انجام شده؟:</p>
            <div class="col-md-10">
                @Html.CheckBoxFor(modelItem => modelItem.IsDone)
                @Html.ValidationMessageFor(modelItem => modelItem.IsDone, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            <p class="control-label"> تاخیر داشته؟</p>
            <div class="col-md-10">
                @Html.CheckBoxFor(modelItem => modelItem.HasDelay)
                @Html.ValidationMessageFor(modelItem => modelItem.HasDelay, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            <p class="control-label"> مبلغ جریمه:</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinePrice, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                <p class="control-label"> مسیر:</p>
                <div class="col-md-10">
                    @Html.DropDownListFor(x => Model.RoutId, new SelectList(Model.RoutTblList, "Id", "Name"), Model.RoutName, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoutTbl.Name, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.RoutId)

                </div>
            </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success">ثبت</button>
            </div>
        </div>
    </div>
}
<div class="link-back">
    @Html.ActionLink("بازگشت به لیست", "Index")
</div>

