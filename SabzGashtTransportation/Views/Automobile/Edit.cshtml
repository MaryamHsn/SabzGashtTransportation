@using Sabz.DomainClasses.DTO
@using Sabz.ServiceLayer.Enumration
@using Sabz.ServiceLayer.Extension
@using Sabz.ServiceLayer.Utils
@model SabzGashtTransportation.ViewModel.AutomobileViewModel

@{
    ViewBag.Title = " ویرایش اتومبیل";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    @Styles.Render("~/css/css/style.css");
    var coolerTextShowDefault = "";
    var autoTypeTextShowDefault = "";
}


<h2 class="style-h2"> ویرایش اتومبیل</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AutoId)


        <div class="form-group">
            <p class="control-label">شماره پلاک:</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            <p class="control-label">سال ساخت:</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label">کولر دار:</p>
            <div class="col-md-10">
                @Html.EnumDropDownListFor(x => x.HasCoolerEnum, "انتخاب کنید", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.HasCooler, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label">نوع ماشین:</p>
            <div class="col-md-10">
                @Html.EnumDropDownListFor(x => x.IsBusEnum, autoTypeTextShowDefault, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsBus, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success">ثبت</button>
            </div>
        </div>
    </div>
}
<div class="link-back">
    @Html.ActionLink("بازگشت به لیست", "Index")
</div>

