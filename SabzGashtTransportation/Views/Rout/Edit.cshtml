@using Sabz.DomainClasses.DTO
@using Sabz.ServiceLayer.Enumration
@using Sabz.ServiceLayer.Extension
@using Sabz.ServiceLayer.Utils
@model SabzGashtTransportation.ViewModel.RoutViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    @Styles.Render("~/css/css/style.css");
}


<h2 class="style-h2">ویرایش مسیر</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RoutID)


        <div class="form-group">
            <p class="control-label"> منطقه:</p>
            <div class="col-md-10">
                @Html.DropDownListFor(x => Model.RegionId, new SelectList(Model.RegionTblList, "Id", "RegionName"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.RegionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label"> تاریخ شروع:</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDateString, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDateString, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label"> ساعت ورود/خروج:</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnterTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnterTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label">  مسیر ورودی/خروجی:</p>
            <div class="col-md-10">
                @Html.EnumDropDownListFor(x => x.ShiftTypeEnum, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShiftTypeEnum, "", new { @class = "text-danger" })
                 
            </div>
        </div>
        <div class="form-group">
            <p class="control-label"> نوع مسیر:</p>
            <div class="col-md-10">
                @Html.EnumDropDownListFor(x => x.RoutTransactionTypeEnum, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoutTransactionTypeEnum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <p class="control-label">نوع اتومبیل:</p>
            <div class="col-md-10"> 
                @Html.EnumDropDownListFor(x => x.IsBusEnum, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsBusEnum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label">کولر دار:</p>
            <div class="col-md-10">  
                    @Html.EnumDropDownListFor(x => x.HasCoolerEnum , new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.HasCoolerEnum, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <p class="control-label">تعداد :</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success">ثبت</button>
            </div>
        </div>
    </div>
}
<div class="link-back">
    @Html.ActionLink("بازگشت به لیست", "Index")
</div>

